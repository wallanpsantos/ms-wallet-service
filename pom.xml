<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.5.4</version>
        <relativePath/>
    </parent>

    <groupId>com.br</groupId>
    <artifactId>ms-wallet-service</artifactId>
    <version>${revision}</version>
    <packaging>pom</packaging>
    <name>ms-wallet-service</name>
    <description>ms-wallet-service</description>

    <modules>
        <module>wallet-core</module>
        <module>wallet-dataprovider</module>
        <module>wallet-entrypoint</module>
        <module>wallet-config</module>
    </modules>

    <properties>
        <revision>1.0.0</revision>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <java.version>21</java.version>
        <spring-cloud.version>2025.0.0</spring-cloud.version>
        <lombok.version>1.18.38</lombok.version>
        <lombok-mapstruct-binding.version>0.2.0</lombok-mapstruct-binding.version>
        <mapstruct.version>1.6.3</mapstruct.version>
        <commons-lang3.version>3.18.0</commons-lang3.version>
        <slf4j-api.version>2.0.17</slf4j-api.version>
        <micrometer-registry-otlp.version>1.15.3</micrometer-registry-otlp.version>
        <maven-enforcer-plugin.version>3.6.1</maven-enforcer-plugin.version>
    </properties>

    <!--
      Centraliza o GERENCIAMENTO de versões.
      Os módulos filhos herdam as versões daqui, mas só usam as dependências que declararem.
    -->
    <dependencyManagement>
        <dependencies>
            <!-- BOM do Spring Cloud -->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!-- Dependências dos Módulos Internos -->
            <dependency>
                <groupId>com.br</groupId>
                <artifactId>wallet-core</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.br</groupId>
                <artifactId>wallet-dataprovider</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.br</groupId>
                <artifactId>wallet-entrypoint</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.br</groupId>
                <artifactId>wallet-config</artifactId>
                <version>${project.version}</version>
            </dependency>

            <!-- Dependências de Bibliotecas -->
            <dependency>
                <groupId>org.mapstruct</groupId>
                <artifactId>mapstruct</artifactId>
                <version>${mapstruct.version}</version>
            </dependency>

            <!-- Logging -->
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>${slf4j-api.version}</version>
            </dependency>

            <!-- Observabilidade: Registry OpenTelemetry Protocol (OTLP) do Micrometer para exportação de métricas
                 Permite envio de métricas para Prometheus, Grafana Cloud, Jaeger, Zipkin, New Relic, Datadog -->
            <dependency>
                <groupId>io.micrometer</groupId>
                <artifactId>micrometer-registry-otlp</artifactId>
                <version>${micrometer-registry-otlp.version}</version>
                <scope>runtime</scope>
            </dependency>

        </dependencies>
    </dependencyManagement>

    <!-- Dependências compartilhada entre módulos. -->
    <dependencies>

        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>jakarta.validation</groupId>
            <artifactId>jakarta.validation-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>${commons-lang3.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
        </dependency>

        <!-- Testes -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <scope>test</scope>
        </dependency>

    </dependencies>

    <build>

        <!--
          Centraliza a CONFIGURAÇÃO dos plugins.
          Eles só serão executados nos módulos que os declararem em seu próprio <build>.
        -->
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <configuration>
                        <annotationProcessorPaths>
                            <path>
                                <groupId>org.projectlombok</groupId>
                                <artifactId>lombok</artifactId>
                                <version>${lombok.version}</version>
                            </path>
                            <path>
                                <groupId>org.mapstruct</groupId>
                                <artifactId>mapstruct-processor</artifactId>
                                <version>${mapstruct.version}</version>
                            </path>
                            <path>
                                <groupId>org.projectlombok</groupId>
                                <artifactId>lombok-mapstruct-binding</artifactId>
                                <version>${lombok-mapstruct-binding.version}</version>
                            </path>
                        </annotationProcessorPaths>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                </plugin>

                <!--
                  BOA PRÁTICA: Adicionar o Maven Enforcer Plugin para garantir a consistência do build.
                  Ele será herdado e executado por todos os módulos.
                -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-enforcer-plugin</artifactId>
                    <version>${maven-enforcer-plugin.version}</version>
                    <executions>
                        <execution>
                            <id>enforce-rules</id>
                            <goals>
                                <goal>enforce</goal>
                            </goals>
                            <configuration>
                                <rules>
                                    <requireJavaVersion>
                                        <version>${java.version}</version>
                                    </requireJavaVersion>
                                    <requireMavenVersion>
                                        <version>3.9.9</version>
                                    </requireMavenVersion>
                                    <!-- Garante que não haja conflitos de versões em dependências transitivas. -->
                                    <dependencyConvergence/>
                                </rules>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>

                <!--
                  Executa as regras de qualidade do build definidas no pluginManagement.
                  Garante consistência de versões Java/Maven e resolve conflitos de dependências transitivas.
                -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-enforcer-plugin</artifactId>
                </plugin>

            </plugins>
        </pluginManagement>

    </build>

</project>
